<%= form_tag transfers_path, id: "transfer-form" do %>
  <div class="form-group">
    <%= label_tag :to %>
    <%= text_field_tag :to, nil, class: "form-control" %>
  </div>

  <div class="form-group">
    <%= label_tag :amount %>
    <%= text_field_tag :amount, nil, class: "form-control" %>
  </div>

  <%= submit_tag "TransfÃ©rer", class: "btn btn-primary" %>
<% end %>

<!-- Load Web3.js -->
<script src="https://cdn.jsdelivr.net/npm/web3@1.3.0/dist/web3.min.js"></script>

<script>
  window.addEventListener("load", async () => {
    // Connect to Ethereum network
    if (window.ethereum) {
      window.web3 = new Web3(ethereum);
      try {
        // Request account access
        await ethereum.enable();
      } catch (error) {
        console.error("User denied account access");
      }
    }
    // Legacy dapp browsers...
    else if (window.web3) {
      window.web3 = new Web3(web3.currentProvider);
    }
    // Non-dapp browsers...
    else {
      console.error("Non-Ethereum browser detected. You should consider trying MetaMask!");
    }

    // Get the first account from the Ethereum network
    const accounts = await web3.eth.getAccounts();
    const from = accounts[0];

    // Handle form submission
    const form = document.getElementById("transfer-form");
    form.addEventListener("submit", async (event) => {
      event.preventDefault();

      // Get form values
      const to = form.elements.to.value;
      const amount = form.elements.amount.value;

      // Convert the amount to wei (the smallest unit of ether)
      const amountInWei = web3.utils.toWei(amount, "ether");

      // Send the transaction
      try {
        const result = await web3.eth.sendTransaction({ from, to, value: amountInWei });
        console.log(result);
      } catch (error) {
        console.error(error);
      }
    });
  });
</script>

<h2>Historique des transactions</h2>

<table class="table">
  <thead>
    <tr>
      <th>From</th>
      <th>To</th>
      <th>Amount</th>
      <th>Date</th>
    </tr>
  </thead>
  <tbody id="transactions-table">
    <!-- Transactions will be added here -->
  </tbody>
</table>

<!-- Load Web3.js -->
<script src="https://cdn.jsdelivr.net/npm/web3@1.3.0/dist/web3.min.js"></script>

<script>
  window.addEventListener("load", async () => {
    // Connect to Ethereum network
    if (window.ethereum) {
      window.web3 = new Web3(ethereum);
      try {
        // Request account access
        await ethereum.enable();
      } catch (error) {
        console.error("User denied account access");
      }
    }
    // Legacy dapp browsers...
    else if (window.web3) {
      window.web3 = new Web3(web3.currentProvider);
    }
    // Non-dapp browsers...
    else {
      console.error("Non-Ethereum browser detected. You should consider trying MetaMask!");
    }

    // Get the first account from the Ethereum network
    const accounts = await web3.eth.getAccounts();
    const from = accounts[0];

    // Handle form submission
    const form = document.getElementById("transfer-form");
    form.addEventListener("submit", async (event) => {
      event.preventDefault();

      // Get form values
      const to = form.elements.to.value;
      const amount = form.elements.amount.value;

      // Convert the amount to wei (the smallest unit of ether)
      const amountInWei = web3.utils.toWei(amount, "ether");

      // Send the transaction
      try {
        const result = await web3.eth.sendTransaction({ from, to, value: amountInWei });
        console.log(result);

        // Add the transaction to the history table
        const transactionsTable = document.getElementById("transactions-table");
        const row = document.createElement("tr");
        row.innerHTML = `
          <td>${from}</td>
          <td>${to}</td>
          <td>${amount} ETH</td>
          <td>${new Date().toLocaleString()}</td>
        `;
        transactionsTable.appendChild(row);
      } catch (error) {
        console.error(error);
      }
    });
  });
</script>
